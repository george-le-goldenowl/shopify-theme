<div class="container">
    <div class="blog__content">
        <h2 class="blog__ttl">{{ blog.title }}</h2>
        <div class="blog__search">
            <form>
                <input type="text" class="form-control form-control-line" placeholder="Search Blog">
                <i class="icon-search"></i>
            </form>
        </div>
        <div class="row">
            <div class="col-lg-8">
                <div class="wrap-blog-list BlogsContent">{%- render 'icon-loading' -%}</div>
                <div class="BlogsContentPaginate"></div>
            </div>
            <div class="col-lg-4">
                <div class="feature">
                    <h2 class="blog__ttl">FEATURED POSTS</h2>
                    <div class="BlogsFeatured">{%- render 'icon-loading' -%}</div>
                </div>
            </div>
        </div>
    </div>
</div>

{%- comment -%}
assign output as javascript variable
{%- endcomment -%}

{%- paginate blog.articles by 5 -%}
    {%- capture output -%}
        {%- for b in blog.articles -%}
            {"id": "{{ b.id }}", "url": "{{ b.url | replace: '\\', '\\\\' | replace: '"', '\\"' | replace:  '/','\\/' }}", "title": "{{ b.title | replace: '\\', '\\\\' | replace: '"', '\\"' | replace:  '/','\\/' }}", "image": "{{ b.image | img_url: '270x270', crop: 'center', scale: 2 }}", "author": "{{ b.author }}", "excerpt": "{{ b.excerpt | strip_html | replace: '\\', '\\\\' | replace: '"', '\\"' | replace:  '/','\\/' | truncatewords: 20 }}", "publishedAt": "{{ b.published_at | date: '%B %d, %Y' }}"} {% unless forloop.last %},{% endunless %}
        {%- endfor -%}
    {%- endcapture -%}
{%- endpaginate -%}

{%- if section.blocks != blank -%}
    {%- capture featured -%}
        {%- for b in section.blocks -%}
            {%- assign e = b.settings.post -%}
            {%- assign cate = e.handle | split: '/' -%}
            {"id": "{{ e.id }}", "url": "{{ e.url | replace: '\\', '\\\\' | replace: '"', '\\"' | replace:  '/','\\/' }}", "cate": "{{ cate[0] | replace: '-', ' '  }}", "title": "{{ e.title | replace: '\\', '\\\\' | replace: '"', '\\"' | replace:  '/','\\/' }}", "image": "{{ e.image | img_url: '60x60', crop: 'center', scale: 2 }}", "author": "{{ e.author }}", "excerpt": "{{ e.excerpt | strip_html | replace: '\\', '\\\\' | replace: '"', '\\"' | replace:  '/','\\/' | truncatewords: 20 }}", "publishedAt": "{{ e.published_at | date: '%B %d, %Y' }}"} {% unless forloop.last %},{% endunless %}
        {%- endfor -%}
    {%- endcapture -%}
{%- else -%}
    {%- assign featured = '' -%}
{%- endif -%}

<script type="text/javascript">
var Blogs = {
    Total: parseInt(`{{ blog.articles_count }}`),
    PerPage: 5,
    Articles: `[{{ output | strip_newlines }}]`,
    Featured: `[{{ featured | strip_newlines }}]`
};

Blogs.GetParam = Type => {
    var queryString = window.location.search;

    if (queryString) {
        var urlParams = new URLSearchParams(queryString);

        switch (Type) {
            case 'page':
                return parseInt(urlParams.get(Type)) || 1;
                break;
            default:
                return urlParams.get(Type) || '';
                break;
        }
    }

    return '';
};

Blogs.Page = Blogs.GetParam('page');

Blogs.UpdateParam = (key, value) => {
    var uri = window.location.href;
    var re = new RegExp("([?&])" + key + "=.*?(&|$)", "i");
    var separator = uri.indexOf('?') !== -1 ? "&" : "?";

    if (uri.match(re)) {
        return uri.replace(re, '$1' + key + "=" + value + '$2');
    } else {
        return uri + separator + key + "=" + value;
    }
};

Blogs.ShowPosts = data => {
    var o;
    try {
        if (!(o = JSON.parse(data)).length) {
            throw 'There are no articles';
        }

        var i = ``;
        o.forEach(e => {
            i += `
                <div class="blog__item" id="Article-${e.id}">
                    <div class="row">
                        <div class="col-md-5">
                            <div class="blog__item__img">
                                <a href="${e.url}"><img src="${e.image}" alt="${e.title}"></a>
                            </div>
                        </div>
                        <div class="col-md-7">
                            <div class="blog__item__info">
                                <div class="cate">{{ blog.title }}</div>
                                <a href="${e.url}" class="ttl">${e.title}</a>
                                <div class="row author">
                                    <div class="col-5">
                                        <i class="fa fa-user-o"></i>by ${e.author}
                                    </div>
                                    <div class="col-5"> <i class="fa fa-calendar-check-o"></i>${e.publishedAt}
                                    </div>
                                    <div class="col-2"> <i class="fa fa-comment-o"></i></div>
                                </div>
                                <p>${e.excerpt}</p>
                                <div class="btn-more">
                                    <a href="${e.url}">Read more</a>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            `;
        });
        Blogs.Content.innerHTML = i;
    } catch(e) {
        console.log(e);
        Blogs.Content.innerHTML = e;
    }
};

Blogs.ShowFeatured = data => {
    try {
        var o;
        if (!(o = JSON.parse(data)).length) {
            throw 'Ther are no featured posts';
        }

        var i = ``;
        o.forEach(e => {
            i += `
                <div class="feature__item">
                    <div class="row">
                        <div class="col-sm-3 col-6">
                            <div class="blog__item__img">
                                <a href="${e.url}"><img src="${e.image}" alt="${e.title}"></a>
                            </div>
                        </div>
                        <div class="col-sm-9 col-6">
                            <div class="blog__item__info">
                                <div class="cate">${e.cate}</div>
                                <a href="${e.url}" class="ttl">${e.title}</a>
                                <p>${e.excerpt}</p>
                            </div>
                        </div>
                    </div>
                </div>
            `;
        });
        Blogs.BlogsFeatured.innerHTML = i;
    } catch(e) {
        console.log(e);
        Blogs.BlogsFeatured.innerHTML = e;
    }
};

Blogs.GenPagination = pages => {
    try {
        if (pages <= 1) {
            throw 'noPagination';
        }
        
        var paginate = `<ul class="pagination">`,
            page = Blogs.GetParam('page') || 1;

        var active, uri;

        // previous
        if (page > 1) {
            uri = Blogs.UpdateParam('page', page - 1);
            paginate += `
                <li class="page-item">
                    <a class="page-link" href="${uri}" aria-label="Previous">
                        <span aria-hidden="true"><i class="fa fa-angle-left" aria-hidden="true"></i></span>
                        <span class="sr-only">Previous</span>
                    </a>
                </li>
            `;
        }

        for (var i = 1; i <= pages; i++) {
            active = i == page ? 'active' : '';
            uri = Blogs.UpdateParam('page', i);
            paginate += `<li class="page-item ${active}"><a class="page-link" href="${uri}">${i}</a></li>`;
        }

        // next
        if (page < pages) {
            uri = Blogs.UpdateParam('page', page + 1);
            paginate += `
            <li class="page-item">
                <a class="page-link" href="${uri}" aria-label="Next">
                    <span aria-hidden="true"><i class="fa fa-angle-right" aria-hidden="true"></i></span>
                    <span class="sr-only">Next</span>
                </a>
            </li>`;
        }

        paginate += '</ul>'; 

        return paginate;       
    } catch(e) {
        console.log(e);
        return ``;
    }
};

window.addEventListener('load', e => {
    Blogs.Content = document.querySelector('.BlogsContent');
    Blogs.PagiContent = document.querySelector('.BlogsContentPaginate');
    Blogs.BlogsFeatured = document.querySelector('.BlogsFeatured');

    Blogs.ShowPosts(Blogs.Articles);
    Blogs.ShowFeatured(Blogs.Featured);

    // Render Pagination
    var pages = Math.ceil(Blogs.Total/Blogs.PerPage);

    if (pages > 1) {
        var o = Blogs.GenPagination(pages);
        Blogs.PagiContent.innerHTML = o;
    }
});
</script>
{% schema %}
  {
    "name": "Articles",
    "blocks": [
        {
            "type": "featured_articles",
            "name": "Featured Posts",
            "limit": 4,
            "settings": [
                {
                    "id": "post",
                    "type": "article",
                    "label": "Select article"
                }
            ]
        }
    ]
  }
{% endschema %}